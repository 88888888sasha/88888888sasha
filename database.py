
### Подключаем модуль sqlite3
import sqlite3




# Функция создания таблицы

def create_table():
    # Здесь name - название таблицы
    # Создаем запрос на создание таблицы, если таковой еще не существует
    que_create = '''
        CREATE TABLE IF NOT EXISTS SCHOT(
            id INTEGER PRIMARY KEY,
            You INTEGER,
            Vrag INTEGER
        )
    '''

    # С помощью курсора выполняем запрос
    cur.execute(que_create)
    # Сохраняем изменения в базе данных
    database.commit()

# Функция получения данных
def get_data():
    # Здесь column - поля таблицы, которые хотим получить(столбцы)
    # table_name - имя таблицы, из которой хотим получить данные
    # Создаем запрос на получение данных
    que_select = '''
        SELECT You FROM SCHOT
    '''

    # Получаем результат
    result = cur.execute(que_select)
    # Получаем все строки из результата
    data = result.fetchall()
    # Возвращаем полученные строки
    return data

# Функция занесения данных в таблицу
def insert_data(a, b):
    # Здесь table_name - название таблицы, в которую хотите занести данные
    # column - поля(столбцы) в которые хотите занести данные
    # value - сами данные
    # Создаем запрос на внесение данных в таблицу

    que_insert = '''
            INSERT INTO SCHOT (You, Vrag) VALUES (''' + str(a) + ''', ''' + str(b) + ''') 
        '''
    a = 1
    b = 2
    # С помощью курсора выполняем запрос
    cur.execute(que_insert)
    # Сохраняем изменения в базе данных
    database.commit()


# Создаем подключение в базе данных
database = sqlite3.connect('game.sqlite')

# Создаем курсор, который дальше будет общаться с базой
cur = database.cursor()

# Вызываем функцию создания таблицы с названием 'scores'
create_table()
# Выводим данные. Обратите внимание, что поля, которые вы хотите вывести, необходимо писать через запятую и пробел
# Сначала пишется название таблицы, из которой хотите получить данные, после этого пишутся поля


